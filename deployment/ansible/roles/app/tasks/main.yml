---
- name: Create app's user
  user:
    name: "{{ user }}"
    system: yes
    # shell: /bin/false
    shell: /usr/sbin/nologin
    home: "{{ app_dir }}"
    createhome: no
    comment: SanskritVoice app

- name: Make root dir for apps
  file:
    path: /apps
    state: directory

- name: Make app's dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
  with_items:
    - "{{ app_dir }}"
    - "{{ app_dir }}/logs"
    - "{{ app_dir }}/venv"
    - "{{ app_dir }}/uploads"
    - "{{ app_dir }}/tmp"
    - "{{ app_dir }}/src"

- name: Install pip and virtualenv
  apt:
    name: "{{ item }}"
  with_items:
    - python3-pip
    # - python3-virtualenv
    - build-essential
    - python3-dev

- name: Install virtualenv
  pip:
    name: virtualenv

- name: Copy source files
  copy:
    src: "{{ item }}"
    dest: "{{ app_dir }}/src"
  with_items:
    - sv-0.1-py3-none-any.whl
    - deform-2.0.5.dev0-py3-none-any.whl

- name: Install app
  pip:
    name: "{{ item }}"
    virtualenv: "{{ app_dir }}/venv"
    state: latest
  with_items:
    - "{{ app_dir }}/src/sv-0.1-py3-none-any.whl"
    - "{{ app_dir }}/src/deform-2.0.5.dev0-py3-none-any.whl"
  become_user: "{{ user }}"

- name: Copy settings
  template:
    src: production.ini
    dest: "{{ app_dir }}/src"
  become_user: "{{ user }}"

- name: Make dir for static files
  file:
    path: "{{ app_dir }}/static"
    state: directory
    # we could try to use ansible_env.USER also
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Copy static files
  synchronize:
    src: "{{ playbook_dir }}/../../sv/sv/static"
    dest: "{{ app_dir }}"
  become: no

- name: chmod static dirs (drwxr-xr-x)
  # command: chmod -R u=rwX,g=rX,o=rX {{ app_dir }}/static
  command: find {{ app_dir }}/static -type d -exec chmod 755 {} +

- name: chmod static files (-rw-r--r--)
  command: find {{ app_dir }}/static -type f -exec chmod 644 {} +

- name: Initialize database
  command: "{{ app_dir }}/venv/bin/initialize_db production.ini"
  args:
    chdir: "{{ app_dir }}/src"
  become_user: "{{ user }}"

- name: Install supervisor
  apt:
    name: supervisor

- name: Copy supervisor config
  template:
    src: sanskritvoice.conf
    dest: /etc/supervisor/conf.d/

- name: Start the app
  supervisorctl:
    name: "{{ app_name }}"
    state: restarted

